{
  "version": 3,
  "sources": ["../background.js"],
  "sourcesContent": ["/* global chrome */\r\n\r\n// --- CONFIGURATION ---\r\n// These values are injected by the build script (build.sh) as a global CONFIG object.\r\nconsole.log('[Background] Starting in PRODUCTION mode');\r\n\r\n// Get AUTH_ENDPOINT from CONFIG (injected by build script)\r\nconst AUTH_ENDPOINT = CONFIG?.AUTH_ENDPOINT || 'https://trystamp.ai/email-poller';\r\n\r\n// Map to track Web OAuth flows by tab ID\r\nconst webOAuthFlows = new Map();\r\n\r\n// Helper function to get redirect URL that works in both Chrome and Edge\r\nfunction getRedirectURL() {\r\n  // For Edge compatibility, use the hardcoded URL if getRedirectURL is not available\r\n  const redirectUri = chrome.identity.getRedirectURL \r\n    ? chrome.identity.getRedirectURL()\r\n    : \"https://trystamp.ai/oauth2-callback\";\r\n  \r\n  console.log('[Background] Using redirect URI:', redirectUri);\r\n  return redirectUri;\r\n}\r\n\r\n\r\n\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n  console.log('[Background] Received message:', message.type);\r\n  console.log('[Background] Message details:', { type: message.type, sender: sender.tab?.url || 'no-tab' });\r\n\r\n  // --- Message Handler 1: InboxSDK Page World Injection ---\r\n  if (message.type === 'inboxsdk__injectPageWorld' && sender.tab) {\r\n    const promise = new Promise((resolve) => {\r\n      console.log('[Background] Handling InboxSDK page world injection');\r\n      if (chrome.scripting) {\r\n        const target = { tabId: sender.tab.id, frameIds: [sender.frameId] };\r\n        chrome.scripting.executeScript({\r\n          target: target,\r\n          world: 'MAIN',\r\n          files: ['pageWorld.js'],\r\n        }, () => resolve(true));\r\n      } else {\r\n        resolve(false);\r\n      }\r\n    });\r\n    promise.then(sendResponse);\r\n    return true;\r\n  }\r\n\r\n  // --- Message Handler 2: Get Authentication Code ---\r\n  if (message.type === 'GET_AUTH_CODE') {\r\n    const promise = new Promise((resolve, reject) => {\r\n      console.log('[Background] Starting GET_AUTH_CODE flow using launchWebAuthFlow.');\r\n\r\n      const manifest = chrome.runtime.getManifest();\r\n      const clientId = manifest.oauth2.client_id;\r\n      const scopes = manifest.oauth2.scopes.join(' ');\r\n      const redirectUri = getRedirectURL();\r\n\r\n      console.log('[Background] Chrome Extension OAuth flow parameters:', { \r\n        clientId, \r\n        redirectUri, \r\n        scopes: manifest.oauth2.scopes \r\n      });\r\n      console.log('[Background] \uD83D\uDD0D CHROME EXTENSION CLIENT ID:', clientId);\r\n\r\n      const authUrl = `https://accounts.google.com/o/oauth2/v2/auth?` +\r\n        `client_id=${clientId}&` +\r\n        `response_type=code&` +\r\n        `access_type=online&` + // Changed to online for Chrome extension\r\n        `prompt=consent&` +      \r\n        `scope=${encodeURIComponent(scopes)}&` +\r\n        `redirect_uri=${encodeURIComponent(redirectUri)}`;\r\n\r\n      console.log('[Background] Generated Chrome Extension auth URL:', authUrl);\r\n\r\n      try {\r\n        console.log('[Background] \uD83D\uDE80 Launching Chrome Extension OAuth flow...');\r\n        console.log('[Background] \uD83D\uDD0D OAuth will prompt user to sign in with their Google account');\r\n        chrome.identity.launchWebAuthFlow({ url: authUrl, interactive: true }, (responseUrl) => {\r\n          if (chrome.runtime.lastError) {\r\n            console.error('[Background] \u274C Chrome Extension OAuth flow error:', chrome.runtime.lastError.message);\r\n            console.error('[Background] \uD83D\uDD0D Error details:', {\r\n              error: chrome.runtime.lastError.message,\r\n              clientId: clientId,\r\n              redirectUri: redirectUri,\r\n              authUrl: authUrl\r\n            });\r\n            reject(new Error(chrome.runtime.lastError.message));\r\n            return;\r\n          }\r\n\r\n          if (responseUrl) {\r\n            console.log('[Background] Received response URL:', responseUrl);\r\n            const code = new URL(responseUrl).searchParams.get('code');\r\n            resolve({ code: code, redirectUri: redirectUri });\r\n          } else {\r\n            console.log('[Background] Auth flow cancelled by user.');\r\n            reject(new Error('Auth flow cancelled by user.'));\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('[Background] Error in launchWebAuthFlow:', error);\r\n        reject(error);\r\n      }\r\n    });\r\n\r\n    promise.then(sendResponse).catch(error => sendResponse({ error: error.message }));\r\n    return true; // Indicates an async response\r\n  }\r\n\r\n\r\n\r\n  // --- Message Handler 3: Start Web Client OAuth Flow ---\r\n  if (message.type === 'START_WEB_OAUTH_FLOW') {\r\n    const promise = new Promise((resolve, reject) => {\r\n      console.log('[Background] Starting Web OAuth flow');\r\n      console.log('[Background] \uD83C\uDF10 WEB OAUTH ENDPOINT:', AUTH_ENDPOINT);\r\n      console.log('[Background] \uD83D\uDCDD Note: Web OAuth client ID will be determined by backend server');\r\n\r\n      // Use the full AUTH_ENDPOINT path since backend endpoints are at /email-poller/auth/...\r\n      const oauthStartUrl = `${AUTH_ENDPOINT}/auth/google/start`;\r\n      console.log('[Background] Opening Web OAuth tab:', oauthStartUrl);\r\n      console.log('[Background] \uD83D\uDD0D Expected OAuth flow:');\r\n      console.log('[Background]   1. Backend OAuth start \u2192 Google OAuth \u2192 Backend callback');\r\n      console.log('[Background]   2. Backend should show success page with user email');\r\n      console.log('[Background]   3. OAuth callback detector should detect success on backend page');\r\n\r\n      // Create a new tab for the Web OAuth flow\r\n      console.log('[Background] \uD83D\uDE80 Creating Web OAuth tab...');\r\n      console.log('[Background] \uD83D\uDCCB OAuth tab will open:', oauthStartUrl);\r\n      chrome.tabs.create({\r\n        url: oauthStartUrl,\r\n        active: true\r\n      }, (tab) => {\r\n        if (chrome.runtime.lastError) {\r\n          console.error('[Background] \u274C Error creating Web OAuth tab:', chrome.runtime.lastError.message);\r\n          console.error('[Background] \uD83D\uDD0D Web OAuth error details:', {\r\n            error: chrome.runtime.lastError.message,\r\n            oauthStartUrl: oauthStartUrl,\r\n            authEndpoint: AUTH_ENDPOINT\r\n          });\r\n          reject(new Error(chrome.runtime.lastError.message));\r\n          return;\r\n        }\r\n\r\n        console.log('[Background] OAuth tab created, ID:', tab.id);\r\n\r\n        // Set up timeout for OAuth flow\r\n        const timeout = setTimeout(() => {\r\n          console.log('[Background] OAuth flow timed out');\r\n          webOAuthFlows.delete(tab.id);\r\n          chrome.tabs.remove(tab.id).catch(() => {});\r\n          reject(new Error('Web OAuth flow timed out'));\r\n        }, 5 * 60 * 1000); // 5 minute timeout\r\n\r\n        // Store the flow state\r\n        webOAuthFlows.set(tab.id, { resolve, reject, timeout });\r\n        \r\n        // Listen for tab updates to see where the OAuth flow goes\r\n        const tabUpdateListener = (tabId, changeInfo, updatedTab) => {\r\n          if (tabId === tab.id && changeInfo.url) {\r\n            console.log('[Background] OAuth tab navigated to:', changeInfo.url);\r\n            if (changeInfo.url.includes('trystamp.ai/oauth2-callback')) {\r\n              console.log('[Background] \uD83C\uDFAF OAuth callback page detected!');\r\n            }\r\n            if (changeInfo.url.includes('70h4jbuv95.execute-api.us-east-2.amazonaws.com')) {\r\n              console.log('[Background] \uD83C\uDFAF Backend OAuth page detected!');\r\n            }\r\n            if (changeInfo.url.includes('accounts.google.com')) {\r\n              console.log('[Background] \uD83C\uDFAF Google OAuth page detected!');\r\n            }\r\n          }\r\n        };\r\n        \r\n        chrome.tabs.onUpdated.addListener(tabUpdateListener);\r\n        \r\n        // Store the listener so we can remove it later\r\n        webOAuthFlows.get(tab.id).tabUpdateListener = tabUpdateListener;\r\n        \r\n        console.log('[Background] Waiting for OAuth completion...');\r\n      });\r\n    });\r\n\r\n    promise.then(result => {\r\n      console.log('[Background] Web OAuth completed successfully');\r\n      sendResponse(result);\r\n    }).catch(error => {\r\n      console.error('[Background] Web OAuth failed:', error.message);\r\n      sendResponse({ error: error.message });\r\n    });\r\n    return true; // Indicates an async response\r\n  }\r\n\r\n  // --- Message Handler 4: OAuth Web Client Complete ---\r\n  if (message.type === 'OAUTH_WEB_CLIENT_COMPLETE') {\r\n    console.log('[Background] Received OAuth completion:', message.result.success ? 'SUCCESS' : 'FAILED');\r\n    console.log('[Background] OAuth result details:', {\r\n      success: message.result.success,\r\n      userEmail: message.result.userEmail,\r\n      method: message.result.method,\r\n      error: message.result.error,\r\n      url: message.url\r\n    });\r\n\r\n    // Find the tab that sent this message\r\n    if (sender.tab) {\r\n      const tabId = sender.tab.id;\r\n      const flowState = webOAuthFlows.get(tabId);\r\n\r\n      if (flowState) {\r\n        console.log('[Background] Found matching OAuth flow, cleaning up...');\r\n\r\n        // Clear the timeout\r\n        clearTimeout(flowState.timeout);\r\n        \r\n        // Remove tab update listener\r\n        if (flowState.tabUpdateListener) {\r\n          chrome.tabs.onUpdated.removeListener(flowState.tabUpdateListener);\r\n        }\r\n        \r\n        webOAuthFlows.delete(tabId);\r\n\r\n        // Close the OAuth tab\r\n        chrome.tabs.remove(tabId).catch(() => {});\r\n\r\n        // Resolve or reject based on the result\r\n        if (message.result.success) {\r\n          console.log('[Background] OAuth flow completed successfully');\r\n          \r\n          // Store user email if available\r\n          if (message.result.userEmail) {\r\n            console.log('[Background] Storing user email:', message.result.userEmail);\r\n            chrome.storage.local.set({ userEmail: message.result.userEmail });\r\n          } else {\r\n            console.warn('[Background] No user email found in OAuth result');\r\n          }\r\n          \r\n          flowState.resolve({\r\n            success: true,\r\n            url: message.url,\r\n            result: message.result\r\n          });\r\n        } else {\r\n          console.error('[Background] OAuth flow failed:', message.result.error);\r\n          flowState.reject(new Error(message.result.error || 'Web OAuth flow failed'));\r\n        }\r\n      } else {\r\n        console.warn('[Background] No matching OAuth flow found for tab:', tabId);\r\n      }\r\n    }\r\n\r\n    sendResponse({ received: true });\r\n    return false;\r\n  }\r\n\r\n  // --- Message Handler 5: Get Chrome Extension Access Token ---\r\n  if (message.type === 'GET_CHROME_ACCESS_TOKEN') {\r\n    const promise = new Promise((resolve, reject) => {\r\n      console.log('[Background] Getting Chrome extension access token for direct API access');\r\n\r\n      const manifest = chrome.runtime.getManifest();\r\n      const scopes = manifest.oauth2.scopes;\r\n\r\n      console.log('[Background] Requesting access token with scopes:', scopes);\r\n\r\n      try {\r\n        console.log('[Background] Requesting Chrome identity token with scopes:', scopes);\r\n        chrome.identity.getAuthToken({\r\n          interactive: true,\r\n          scopes: scopes\r\n        }, (token) => {\r\n          console.log('[Background] Chrome identity callback received');\r\n          console.log('[Background] Token received:', token ? 'YES (' + token.length + ' chars)' : 'NO');\r\n\r\n          if (chrome.runtime.lastError) {\r\n            console.error('[Background] Access token error:', chrome.runtime.lastError.message);\r\n            console.error('[Background] Full runtime error:', chrome.runtime.lastError);\r\n            reject(new Error(chrome.runtime.lastError.message));\r\n            return;\r\n          }\r\n\r\n          if (token) {\r\n            console.log('[Background] Access token obtained, fetching user info...');\r\n            \r\n            // Get user email using the access token\r\n            console.log('[Background] Fetching user info from Google API...');\r\n            fetch('https://www.googleapis.com/oauth2/v2/userinfo', {\r\n              headers: {\r\n                'Authorization': `Bearer ${token}`\r\n              }\r\n            })\r\n            .then(response => {\r\n              console.log('[Background] Userinfo API response status:', response.status);\r\n              console.log('[Background] Userinfo API response ok:', response.ok);\r\n\r\n              if (!response.ok) {\r\n                console.error('[Background] Userinfo API error response:', response.status, response.statusText);\r\n                return response.text().then(text => {\r\n                  console.error('[Background] Userinfo API error body:', text);\r\n                  throw new Error(`HTTP ${response.status}: ${text}`);\r\n                });\r\n              }\r\n\r\n              return response.json();\r\n            })\r\n            .then(userInfo => {\r\n              console.log('[Background] User info obtained successfully:', userInfo);\r\n              console.log('[Background] User email:', userInfo.email);\r\n              resolve({\r\n                accessToken: token,\r\n                userEmail: userInfo.email,\r\n                userInfo: userInfo\r\n              });\r\n            })\r\n            .catch(error => {\r\n              console.error('[Background] Detailed error fetching user info:', {\r\n                message: error.message,\r\n                stack: error.stack,\r\n                tokenLength: token ? token.length : 0,\r\n                tokenPrefix: token ? token.substring(0, 10) + '...' : 'null'\r\n              });\r\n\r\n              resolve({\r\n                accessToken: token,\r\n                userEmail: null,\r\n                error: 'Could not fetch user info: ' + error.message,\r\n                debug: {\r\n                  tokenLength: token ? token.length : 0,\r\n                  tokenPrefix: token ? token.substring(0, 10) : null,\r\n                  scopes: scopes,\r\n                  errorType: error.name,\r\n                  errorMessage: error.message\r\n                }\r\n              });\r\n            });\r\n          } else {\r\n            console.log('[Background] Access token request cancelled by user.');\r\n            reject(new Error('Access token request cancelled by user.'));\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('[Background] Error in getAuthToken:', error);\r\n        reject(error);\r\n      }\r\n    });\r\n\r\n    promise.then(sendResponse).catch(error => sendResponse({ error: error.message }));\r\n    return true; // Indicates an async response\r\n  }\r\n\r\n  // --- Message Handler 6: Clear Chrome Identity Cache (for sign-up only) ---\r\n  if (message.type === 'CLEAR_CHROME_IDENTITY_CACHE') {\r\n    const promise = new Promise((resolve, reject) => {\r\n      console.log('[Background] Clearing Chrome identity cache for fresh sign-up...');\r\n      \r\n      chrome.identity.clearAllCachedAuthTokens(() => {\r\n        if (chrome.runtime.lastError) {\r\n          console.log('[Background] Could not clear cached tokens (non-critical):', chrome.runtime.lastError.message);\r\n          resolve({ success: false, error: chrome.runtime.lastError.message });\r\n        } else {\r\n          console.log('[Background] Cached auth tokens cleared successfully');\r\n          resolve({ success: true });\r\n        }\r\n      });\r\n    });\r\n\r\n    promise.then(sendResponse).catch(error => sendResponse({ error: error.message }));\r\n    return true; // Indicates an async response\r\n  }\r\n\r\n  // --- Message Handler 4: Inject Floating Chat Scripts ---\r\n  if (message.type === 'INJECT_FLOATING_CHAT_SCRIPTS') {\r\n    (async () => {\r\n      try {\r\n        console.log('[Background] Handling INJECT_FLOATING_CHAT_SCRIPTS');\r\n        const [tab] = await chrome.tabs.query({active: true, lastFocusedWindow: true});\r\n        if (tab) {\r\n          await chrome.scripting.executeScript({\r\n            target: { tabId: tab.id },\r\n            files: [\r\n              'floating-chat/floating-chat.js',\r\n              'floating-chat/floating-chat-manager.js'\r\n            ]\r\n          });\r\n          console.log('[Background] Successfully injected floating chat scripts.');\r\n          sendResponse({ success: true });\r\n        } else {\r\n          throw new Error('No active tab found to inject scripts into.');\r\n        }\r\n      } catch (error) {\r\n        console.error('[Background] Failed to inject floating chat scripts:', error);\r\n        sendResponse({ success: false, error: error.message });\r\n      }\r\n    })();\r\n    return true; // Indicates an async response\r\n  }\r\n\r\n  // --- Message Handler 5: Get Installation State ---\r\n  if (message.type === 'GET_INSTALLATION_STATE') {\r\n    const promise = new Promise(async (resolve) => {\r\n      try {\r\n        const result = await chrome.storage.local.get(['installationId', 'userEmail']);\r\n        resolve({\r\n          isInstalled: !!result.installationId,\r\n          userEmail: result.userEmail || null,\r\n          installationId: result.installationId || null\r\n        });\r\n      } catch (error) {\r\n        console.error('[Background] Error getting installation state:', error);\r\n        resolve({ isInstalled: false, error: error.message });\r\n      }\r\n    });\r\n\r\n    promise.then(sendResponse);\r\n    return true;\r\n  }\r\n\r\n  // Log unhandled message types\r\n  console.warn('[Background] Unhandled message type:', message.type);\r\n  return false;\r\n}); \r\n\r\n// Clean up OAuth flows when tabs are closed\r\nchrome.tabs.onRemoved.addListener((tabId) => {\r\n  const flowState = webOAuthFlows.get(tabId);\r\n  if (flowState) {\r\n    console.log('[Background] OAuth tab closed, cleaning up flow:', tabId);\r\n    clearTimeout(flowState.timeout);\r\n    webOAuthFlows.delete(tabId);\r\n    flowState.reject(new Error('OAuth tab was closed'));\r\n  }\r\n});"],
  "mappings": "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",
  "names": []
}
